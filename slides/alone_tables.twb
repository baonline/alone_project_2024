<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='alone_project_' inline='true' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_survivalists_clean' name='textscan.1dcrc2k0ybc13j15wga981dpypx0'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/baort/Documents/Ironhack/alone_project_2024/data/alone_project_1.ipynb (df_survivalists_clean) (2).csv' dataRefreshTime='' directory='C:/Users/baort/Documents/Ironhack/alone_project_2024/data' filename='df_survivalists_clean.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='df_armed' name='textscan.00n2nrh1vezvx61h6xryf0h7gips'>
            <connection class='textscan' directory='C:/Users/baort/Documents/Ironhack/alone_project_2024/data' filename='df_armed.csv' password='' server='' />
          </named-connection>
          <named-connection caption='episodes' name='textscan.1uik7et1fywlww14wigsp0gkewr6'>
            <connection class='textscan' directory='C:/Users/baort/Documents/Ironhack/alone_project_2024/data/raw' filename='episodes.csv' password='' server='' />
          </named-connection>
          <named-connection caption='seasons' name='textscan.1k38nwe1fhdyqa10tlxe41i3mtjk'>
            <connection class='textscan' directory='C:/Users/baort/Documents/Ironhack/alone_project_2024/data/raw' filename='seasons.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00n2nrh1vezvx61h6xryf0h7gips' name='df_armed.csv' table='[df_armed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='season' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='age' ordinal='2' />
            <column datatype='string' name='gender' ordinal='3' />
            <column datatype='integer' name='result' ordinal='4' />
            <column datatype='integer' name='days_lasted' ordinal='5' />
            <column datatype='boolean' name='medically_evacuated' ordinal='6' />
            <column datatype='string' name='reason_tapped_out' ordinal='7' />
            <column datatype='string' name='profession' ordinal='8' />
            <column datatype='integer' name='item_number' ordinal='9' />
            <column datatype='string' name='item_detailed' ordinal='10' />
            <column datatype='string' name='item' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.00n2nrh1vezvx61h6xryf0h7gips' name='df_armed.csv' table='[df_armed#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='season' ordinal='0' />
              <column datatype='string' name='name' ordinal='1' />
              <column datatype='integer' name='age' ordinal='2' />
              <column datatype='string' name='gender' ordinal='3' />
              <column datatype='integer' name='result' ordinal='4' />
              <column datatype='integer' name='days_lasted' ordinal='5' />
              <column datatype='boolean' name='medically_evacuated' ordinal='6' />
              <column datatype='string' name='reason_tapped_out' ordinal='7' />
              <column datatype='string' name='profession' ordinal='8' />
              <column datatype='integer' name='item_number' ordinal='9' />
              <column datatype='string' name='item_detailed' ordinal='10' />
              <column datatype='string' name='item' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.1uik7et1fywlww14wigsp0gkewr6' name='episodes.csv' table='[episodes#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='version' ordinal='0' />
              <column datatype='integer' name='season' ordinal='1' />
              <column datatype='integer' name='episode_number_overall' ordinal='2' />
              <column datatype='integer' name='episode' ordinal='3' />
              <column datatype='string' name='title' ordinal='4' />
              <column datatype='date' name='air_date' ordinal='5' />
              <column datatype='real' name='viewers' ordinal='6' />
              <column datatype='string' name='quote' ordinal='7' />
              <column datatype='string' name='author' ordinal='8' />
              <column datatype='real' name='imdb_rating' ordinal='9' />
              <column datatype='integer' name='n_ratings' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1uik7et1fywlww14wigsp0gkewr6' name='seasons.csv' table='[seasons#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='version' ordinal='0' />
              <column datatype='integer' name='season' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='string' name='country' ordinal='3' />
              <column datatype='integer' name='n_survivors' ordinal='4' />
              <column datatype='real' name='lat' ordinal='5' />
              <column datatype='real' name='lon' ordinal='6' />
              <column datatype='date' name='date_drop_off' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[age]' value='[df_armed.csv].[age]' />
          <map key='[air_date]' value='[episodes.csv].[air_date]' />
          <map key='[author]' value='[episodes.csv].[author]' />
          <map key='[country]' value='[seasons.csv].[country]' />
          <map key='[date_drop_off]' value='[seasons.csv].[date_drop_off]' />
          <map key='[days_lasted]' value='[df_armed.csv].[days_lasted]' />
          <map key='[episode]' value='[episodes.csv].[episode]' />
          <map key='[episode_number_overall]' value='[episodes.csv].[episode_number_overall]' />
          <map key='[gender]' value='[df_armed.csv].[gender]' />
          <map key='[imdb_rating]' value='[episodes.csv].[imdb_rating]' />
          <map key='[item]' value='[df_armed.csv].[item]' />
          <map key='[item_detailed]' value='[df_armed.csv].[item_detailed]' />
          <map key='[item_number]' value='[df_armed.csv].[item_number]' />
          <map key='[lat]' value='[seasons.csv].[lat]' />
          <map key='[location]' value='[seasons.csv].[location]' />
          <map key='[lon]' value='[seasons.csv].[lon]' />
          <map key='[medically_evacuated]' value='[df_armed.csv].[medically_evacuated]' />
          <map key='[n_ratings]' value='[episodes.csv].[n_ratings]' />
          <map key='[n_survivors]' value='[seasons.csv].[n_survivors]' />
          <map key='[name]' value='[df_armed.csv].[name]' />
          <map key='[profession]' value='[df_armed.csv].[profession]' />
          <map key='[quote]' value='[episodes.csv].[quote]' />
          <map key='[reason_tapped_out]' value='[df_armed.csv].[reason_tapped_out]' />
          <map key='[result]' value='[df_armed.csv].[result]' />
          <map key='[season (df_armed.csv)]' value='[df_armed.csv].[season]' />
          <map key='[season (seasons.csv)]' value='[seasons.csv].[season]' />
          <map key='[season]' value='[episodes.csv].[season]' />
          <map key='[title]' value='[episodes.csv].[title]' />
          <map key='[version (seasons.csv)]' value='[seasons.csv].[version]' />
          <map key='[version]' value='[episodes.csv].[version]' />
          <map key='[viewers]' value='[episodes.csv].[viewers]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season (df_armed.csv)]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_lasted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_lasted]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>days_lasted</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medically_evacuated</remote-name>
            <remote-type>11</remote-type>
            <local-name>[medically_evacuated]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>medically_evacuated</remote-alias>
            <ordinal>6</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reason_tapped_out</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reason_tapped_out]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>reason_tapped_out</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profession</remote-name>
            <remote-type>129</remote-type>
            <local-name>[profession]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>profession</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[item_number]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>item_number</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_detailed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item_detailed]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>item_detailed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[df_armed.csv]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>129</remote-type>
            <local-name>[version]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>episode_number_overall</remote-name>
            <remote-type>20</remote-type>
            <local-name>[episode_number_overall]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>episode_number_overall</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>episode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[episode]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>episode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>air_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[air_date]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>air_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>viewers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[viewers]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>viewers</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quote</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quote]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>quote</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imdb_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[imdb_rating]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>imdb_rating</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_ratings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n_ratings]</local-name>
            <parent-name>[episodes.csv]</parent-name>
            <remote-alias>n_ratings</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>129</remote-type>
            <local-name>[version (seasons.csv)]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season (seasons.csv)]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n_survivors]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>n_survivors</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_drop_off</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_drop_off]</local-name>
            <parent-name>[seasons.csv]</parent-name>
            <remote-alias>date_drop_off</remote-alias>
            <ordinal>30</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='df_armed.csv' datatype='table' name='[__tableau_internal_object_id__].[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='episodes.csv' datatype='table' name='[__tableau_internal_object_id__].[episodes.csv_3A8872BEBC554C0791B797126050C729]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='seasons.csv' datatype='table' name='[__tableau_internal_object_id__].[seasons.csv_82256FECD04C47CEB68DB2834876E32C]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Air Date' datatype='date' name='[air_date]' role='dimension' type='ordinal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Drop Off' datatype='date' name='[date_drop_off]' role='dimension' type='ordinal' />
      <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
      <column caption='Episode' datatype='integer' name='[episode]' role='measure' type='quantitative' />
      <column caption='Episode Number Overall' datatype='integer' name='[episode_number_overall]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Imdb Rating' datatype='real' name='[imdb_rating]' role='measure' type='quantitative' />
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
      <column caption='Item Detailed' datatype='string' name='[item_detailed]' role='dimension' type='nominal' />
      <column caption='Item Number' datatype='integer' name='[item_number]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Medically Evacuated' datatype='boolean' name='[medically_evacuated]' role='dimension' type='nominal' />
      <column caption='N Ratings' datatype='integer' name='[n_ratings]' role='measure' type='quantitative' />
      <column caption='N Survivors' datatype='integer' name='[n_survivors]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Profession' datatype='string' name='[profession]' role='dimension' type='nominal' />
      <column caption='Quote' datatype='string' name='[quote]' role='dimension' type='nominal' />
      <column caption='Reason Tapped Out' datatype='string' name='[reason_tapped_out]' role='dimension' type='nominal' />
      <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
      <column datatype='integer' name='[season (df_armed.csv)]' role='measure' type='quantitative' />
      <column caption='Season (Seasons.Csv)' datatype='integer' name='[season (seasons.csv)]' role='measure' type='quantitative' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Version (Seasons.Csv)' datatype='string' name='[version (seasons.csv)]' role='dimension' type='nominal' />
      <column caption='Version' datatype='string' name='[version]' role='dimension' type='nominal' />
      <column caption='Viewers' datatype='real' name='[viewers]' role='measure' type='quantitative' />
      <column-instance column='[days_lasted]' derivation='Attribute' name='[attr:days_lasted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gender]' derivation='Attribute' name='[attr:gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[season]' derivation='Attribute' name='[attr:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_lasted]' derivation='Avg' name='[avg:days_lasted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gender]' derivation='Max' name='[max:gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[season]' derivation='Max' name='[max:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_lasted]' derivation='None' name='[none:days_lasted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[profession]' derivation='None' name='[none:profession:nk]' pivot='key' type='nominal' />
      <column-instance column='[season (df_armed.csv)]' derivation='None' name='[none:season (df_armed.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Location,Name,Profession,Season X)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:location:nk]' />
          <groupfilter function='level-members' level='[none:name:nk]' />
          <groupfilter function='level-members' level='[none:profession:nk]' />
          <groupfilter function='level-members' level='[none:season_x:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/baort/Documents/My Tableau Repository/Datasources/alone_project_.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/06/2024 03:57:54 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='df_armed.csv_83560D95B80C4111829DC9CE794B04EB' table='[Extract].[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='df_armed.csv_83560D95B80C4111829DC9CE794B04EB' table='[Extract].[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]' type='table' />
            <relation name='episodes.csv_3A8872BEBC554C0791B797126050C729' table='[Extract].[episodes.csv_3A8872BEBC554C0791B797126050C729]' type='table' />
            <relation name='seasons.csv_82256FECD04C47CEB68DB2834876E32C' table='[Extract].[seasons.csv_82256FECD04C47CEB68DB2834876E32C]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[age]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[age]' />
            <map key='[air_date]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[air_date]' />
            <map key='[author]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[author]' />
            <map key='[country]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[country]' />
            <map key='[date_drop_off]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[date_drop_off]' />
            <map key='[days_lasted]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[days_lasted]' />
            <map key='[episode]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[episode]' />
            <map key='[episode_number_overall]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[episode_number_overall]' />
            <map key='[gender]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[gender]' />
            <map key='[imdb_rating]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[imdb_rating]' />
            <map key='[item]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[item]' />
            <map key='[item_detailed]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[item_detailed]' />
            <map key='[item_number]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[item_number]' />
            <map key='[lat]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[lat]' />
            <map key='[location]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[location]' />
            <map key='[lon]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[lon]' />
            <map key='[medically_evacuated]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[medically_evacuated]' />
            <map key='[n_ratings]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[n_ratings]' />
            <map key='[n_survivors]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[n_survivors]' />
            <map key='[name]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[name]' />
            <map key='[profession]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[profession]' />
            <map key='[quote]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[quote]' />
            <map key='[reason_tapped_out]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[reason_tapped_out]' />
            <map key='[result]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[result]' />
            <map key='[season (df_armed.csv)]' value='[df_armed.csv_83560D95B80C4111829DC9CE794B04EB].[season]' />
            <map key='[season (seasons.csv)]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[season]' />
            <map key='[season]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[season]' />
            <map key='[title]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[title]' />
            <map key='[version (seasons.csv)]' value='[seasons.csv_82256FECD04C47CEB68DB2834876E32C].[version]' />
            <map key='[version]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[version]' />
            <map key='[viewers]' value='[episodes.csv_3A8872BEBC554C0791B797126050C729].[viewers]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='alone_project_' increment-value='%null%' refresh-type='create' rows-inserted='1047' timestamp-start='2024-02-06 15:57:53.188' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>20</remote-type>
              <local-name>[season (df_armed.csv)]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>0</ordinal>
              <family>df_armed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>1</ordinal>
              <family>df_armed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>84</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[age]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>age</remote-alias>
              <ordinal>2</ordinal>
              <family>df_armed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gender]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>gender</remote-alias>
              <ordinal>3</ordinal>
              <family>df_armed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>result</remote-name>
              <remote-type>20</remote-type>
              <local-name>[result]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>result</remote-alias>
              <ordinal>4</ordinal>
              <family>df_armed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_lasted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_lasted]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>days_lasted</remote-alias>
              <ordinal>5</ordinal>
              <family>df_armed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medically_evacuated</remote-name>
              <remote-type>11</remote-type>
              <local-name>[medically_evacuated]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>medically_evacuated</remote-alias>
              <ordinal>6</ordinal>
              <family>df_armed.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reason_tapped_out</remote-name>
              <remote-type>129</remote-type>
              <local-name>[reason_tapped_out]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>reason_tapped_out</remote-alias>
              <ordinal>7</ordinal>
              <family>df_armed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>profession</remote-name>
              <remote-type>129</remote-type>
              <local-name>[profession]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>profession</remote-alias>
              <ordinal>8</ordinal>
              <family>df_armed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[item_number]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>item_number</remote-alias>
              <ordinal>9</ordinal>
              <family>df_armed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_detailed</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item_detailed]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>item_detailed</remote-alias>
              <ordinal>10</ordinal>
              <family>df_armed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>198</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item]</local-name>
              <parent-name>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</parent-name>
              <remote-alias>item</remote-alias>
              <ordinal>11</ordinal>
              <family>df_armed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>version</remote-name>
              <remote-type>129</remote-type>
              <local-name>[version]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>version</remote-alias>
              <ordinal>12</ordinal>
              <family>episodes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>20</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>13</ordinal>
              <family>episodes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>episode_number_overall</remote-name>
              <remote-type>20</remote-type>
              <local-name>[episode_number_overall]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>episode_number_overall</remote-alias>
              <ordinal>14</ordinal>
              <family>episodes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>98</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>episode</remote-name>
              <remote-type>20</remote-type>
              <local-name>[episode]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>episode</remote-alias>
              <ordinal>15</ordinal>
              <family>episodes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>16</ordinal>
              <family>episodes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>98</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>air_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[air_date]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>air_date</remote-alias>
              <ordinal>17</ordinal>
              <family>episodes.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>viewers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[viewers]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>viewers</remote-alias>
              <ordinal>18</ordinal>
              <family>episodes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quote</remote-name>
              <remote-type>129</remote-type>
              <local-name>[quote]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>quote</remote-alias>
              <ordinal>19</ordinal>
              <family>episodes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>author</remote-name>
              <remote-type>129</remote-type>
              <local-name>[author]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>author</remote-alias>
              <ordinal>20</ordinal>
              <family>episodes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>84</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>imdb_rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[imdb_rating]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>imdb_rating</remote-alias>
              <ordinal>21</ordinal>
              <family>episodes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>n_ratings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[n_ratings]</local-name>
              <parent-name>[episodes.csv_3A8872BEBC554C0791B797126050C729]</parent-name>
              <remote-alias>n_ratings</remote-alias>
              <ordinal>22</ordinal>
              <family>episodes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[episodes.csv_3A8872BEBC554C0791B797126050C729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>version</remote-name>
              <remote-type>129</remote-type>
              <local-name>[version (seasons.csv)]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>version</remote-alias>
              <ordinal>23</ordinal>
              <family>seasons.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>20</remote-type>
              <local-name>[season (seasons.csv)]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>24</ordinal>
              <family>seasons.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>25</ordinal>
              <family>seasons.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>26</ordinal>
              <family>seasons.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>n_survivors</remote-name>
              <remote-type>20</remote-type>
              <local-name>[n_survivors]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>n_survivors</remote-alias>
              <ordinal>27</ordinal>
              <family>seasons.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>28</ordinal>
              <family>seasons.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>lon</remote-alias>
              <ordinal>29</ordinal>
              <family>seasons.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_drop_off</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_drop_off]</local-name>
              <parent-name>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</parent-name>
              <remote-alias>date_drop_off</remote-alias>
              <ordinal>30</ordinal>
              <family>seasons.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[seasons.csv_82256FECD04C47CEB68DB2834876E32C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[attr:days_lasted:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:days_lasted:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[attr:season:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[cnt:season:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:season:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kvy06a159fzew1fgzdjl1ag98fr].[sum:season:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:gender:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:gender:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gender:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;Zachary Gault&quot;</bucket>
            </map>
            <map to='#246a3d'>
              <bucket>&quot;Zachary Fowler&quot;</bucket>
            </map>
            <map to='#246c3d'>
              <bucket>&quot;Woniya Thibeault&quot;</bucket>
            </map>
            <map to='#256d3d'>
              <bucket>&quot;Wayne Russell&quot;</bucket>
            </map>
            <map to='#256f3d'>
              <bucket>&quot;Tracy Wilson&quot;</bucket>
            </map>
            <map to='#25703d'>
              <bucket>&quot;Tom Garstang&quot;</bucket>
            </map>
            <map to='#26723d'>
              <bucket>&quot;Tim Madsen&quot;</bucket>
            </map>
            <map to='#26733d'>
              <bucket>&quot;Tim Backus&quot;</bucket>
            </map>
            <map to='#26753d'>
              <bucket>&quot;Theresa Emmerich Kamper&quot;</bucket>
            </map>
            <map to='#27773d'>
              <bucket>&quot;Terry Burns&quot;</bucket>
            </map>
            <map to='#28783e'>
              <bucket>&quot;Teimojin Tan&quot;</bucket>
            </map>
            <map to='#29793e'>
              <bucket>&quot;Ted Baird&quot;</bucket>
            </map>
            <map to='#2a7b3f'>
              <bucket>&quot;Shawn Helton&quot;</bucket>
            </map>
            <map to='#2b7c40'>
              <bucket>&quot;Shannon Bosdell&quot;</bucket>
            </map>
            <map to='#2c7e41'>
              <bucket>&quot;Sam Larson&quot;</bucket>
            </map>
            <map to='#2d7f41'>
              <bucket>&quot;Sam Brockdorff&quot;</bucket>
            </map>
            <map to='#2e8142'>
              <bucket>&quot;Rose Anna Moore&quot;</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>&quot;Roland Welker&quot;</bucket>
            </map>
            <map to='#318444'>
              <bucket>&quot;Ray Livingston&quot;</bucket>
            </map>
            <map to='#338545'>
              <bucket>&quot;Randy Champagne&quot;</bucket>
            </map>
            <map to='#358647'>
              <bucket>&quot;Pete Brockdorff&quot;</bucket>
            </map>
            <map to='#388848'>
              <bucket>&quot;Nikki van Schyndel&quot;</bucket>
            </map>
            <map to='#3a8949'>
              <bucket>&quot;Nicole Apelian&quot;</bucket>
            </map>
            <map to='#3c8b4a'>
              <bucket>&quot;Nathan Donnelly&quot;</bucket>
            </map>
            <map to='#3e8c4b'>
              <bucket>&quot;Nate Weber&quot;</bucket>
            </map>
            <map to='#408e4d'>
              <bucket>&quot;Mitch Mitchell&quot;</bucket>
            </map>
            <map to='#418f4d'>
              <bucket>&quot;Mike Lowe&quot;</bucket>
            </map>
            <map to='#43914e'>
              <bucket>&quot;Michelle Wohlberg&quot;</bucket>
            </map>
            <map to='#45924e'>
              <bucket>&quot;Michelle Finn&quot;</bucket>
            </map>
            <map to='#46934e'>
              <bucket>&quot;Megan Hanacek&quot;</bucket>
            </map>
            <map to='#48954f'>
              <bucket>&quot;Matt Corradino&quot;</bucket>
            </map>
            <map to='#4a964f'>
              <bucket>&quot;Mary Kate Green&quot;</bucket>
            </map>
            <map to='#4b9850'>
              <bucket>&quot;Mark D&apos;Ambrosio&quot;</bucket>
            </map>
            <map to='#4d9950'>
              <bucket>&quot;Lucas Miller&quot;</bucket>
            </map>
            <map to='#4f9b51'>
              <bucket>&quot;Logan Ribar&quot;</bucket>
            </map>
            <map to='#519c51'>
              <bucket>&quot;Larry Roberts&quot;</bucket>
            </map>
            <map to='#539e52'>
              <bucket>&quot;Kielyn Marrone&quot;</bucket>
            </map>
            <map to='#559f52'>
              <bucket>&quot;Keith Syers&quot;</bucket>
            </map>
            <map to='#57a052'>
              <bucket>&quot;Karie Lee Knoke&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Justin Vititoe&quot;</bucket>
            </map>
            <map to='#5ba353'>
              <bucket>&quot;Juan Pablo Quinonez&quot;</bucket>
            </map>
            <map to='#5da553'>
              <bucket>&quot;Josh Richardson&quot;</bucket>
            </map>
            <map to='#5ea654'>
              <bucket>&quot;Josh Chavez&quot;</bucket>
            </map>
            <map to='#60a855'>
              <bucket>&quot;Jose Martinez Amoedo&quot;</bucket>
            </map>
            <map to='#61a957'>
              <bucket>&quot;Jordon Bell&quot;</bucket>
            </map>
            <map to='#63ab58'>
              <bucket>&quot;Jordan Jonas&quot;</bucket>
            </map>
            <map to='#64ac59'>
              <bucket>&quot;Joel Van Der Loon&quot;</bucket>
            </map>
            <map to='#65ad5b'>
              <bucket>&quot;Joe Robinet&quot;</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>&quot;Joe Nicholas&quot;</bucket>
            </map>
            <map to='#68b05d'>
              <bucket>&quot;Jim Shields&quot;</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>&quot;Jim Baird&quot;</bucket>
            </map>
            <map to='#6cb360'>
              <bucket>&quot;Jessie Krebs&quot;</bucket>
            </map>
            <map to='#6db562'>
              <bucket>&quot;Jesse Bosdell&quot;</bucket>
            </map>
            <map to='#6fb764'>
              <bucket>&quot;Jacques Turcotte&quot;</bucket>
            </map>
            <map to='#71b865'>
              <bucket>&quot;Igor Limansky&quot;</bucket>
            </map>
            <map to='#72ba67'>
              <bucket>&quot;Greg Ovens&quot;</bucket>
            </map>
            <map to='#74bb68'>
              <bucket>&quot;Dustin Feher&quot;</bucket>
            </map>
            <map to='#76bd6a'>
              <bucket>&quot;Donny Dust&quot;</bucket>
            </map>
            <map to='#77be6b'>
              <bucket>&quot;Desmond White&quot;</bucket>
            </map>
            <map to='#79c06d'>
              <bucket>&quot;David McIntyre&quot;</bucket>
            </map>
            <map to='#7bc16e'>
              <bucket>&quot;Dave Whipple&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Dave Nessia&quot;</bucket>
            </map>
            <map to='#7fc572'>
              <bucket>&quot;Dan Wowak&quot;</bucket>
            </map>
            <map to='#80c673'>
              <bucket>&quot;Correy Hawk&quot;</bucket>
            </map>
            <map to='#82c875'>
              <bucket>&quot;Colter Barnes&quot;</bucket>
            </map>
            <map to='#84c976'>
              <bucket>&quot;Clay Hayes&quot;</bucket>
            </map>
            <map to='#86cb78'>
              <bucket>&quot;Chris Wilkes&quot;</bucket>
            </map>
            <map to='#88cc7a'>
              <bucket>&quot;Chris Weatherman&quot;</bucket>
            </map>
            <map to='#8ace7b'>
              <bucket>&quot;Carleigh Fairchild&quot;</bucket>
            </map>
            <map to='#8ccf7d'>
              <bucket>&quot;Callie Russell&quot;</bucket>
            </map>
            <map to='#8ed07f'>
              <bucket>&quot;Callie North&quot;</bucket>
            </map>
            <map to='#90d281'>
              <bucket>&quot;Brooke Whipple&quot;</bucket>
            </map>
            <map to='#93d383'>
              <bucket>&quot;Brody Wilkes&quot;</bucket>
            </map>
            <map to='#95d484'>
              <bucket>&quot;Britt Ahart&quot;</bucket>
            </map>
            <map to='#97d686'>
              <bucket>&quot;Brant McGee&quot;</bucket>
            </map>
            <map to='#99d789'>
              <bucket>&quot;Brady Nicholls&quot;</bucket>
            </map>
            <map to='#9dd88c'>
              <bucket>&quot;Brad Richardson&quot;</bucket>
            </map>
            <map to='#a0d990'>
              <bucket>&quot;Biko Wright&quot;</bucket>
            </map>
            <map to='#a3da93'>
              <bucket>&quot;Benki Hill&quot;</bucket>
            </map>
            <map to='#a6db97'>
              <bucket>&quot;Barry Karcher&quot;</bucket>
            </map>
            <map to='#a9dc9b'>
              <bucket>&quot;Amos Rodriguez&quot;</bucket>
            </map>
            <map to='#acdd9e'>
              <bucket>&quot;Alex Ribar&quot;</bucket>
            </map>
            <map to='#afdea2'>
              <bucket>&quot;Alan Kay&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Adam Riley&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:season (df_armed.csv):ok]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>9</bucket>
            </map>
            <map to='#287a42'>
              <bucket>8</bucket>
            </map>
            <map to='#39894c'>
              <bucket>7</bucket>
            </map>
            <map to='#489852'>
              <bucket>6</bucket>
            </map>
            <map to='#60a656'>
              <bucket>5</bucket>
            </map>
            <map to='#83b457'>
              <bucket>4</bucket>
            </map>
            <map to='#a7bf5a'>
              <bucket>3</bucket>
            </map>
            <map to='#cdc85f'>
              <bucket>2</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_armed.csv' id='df_armed.csv_83560D95B80C4111829DC9CE794B04EB'>
            <properties context=''>
              <relation connection='textscan.00n2nrh1vezvx61h6xryf0h7gips' name='df_armed.csv' table='[df_armed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='season' ordinal='0' />
                  <column datatype='string' name='name' ordinal='1' />
                  <column datatype='integer' name='age' ordinal='2' />
                  <column datatype='string' name='gender' ordinal='3' />
                  <column datatype='integer' name='result' ordinal='4' />
                  <column datatype='integer' name='days_lasted' ordinal='5' />
                  <column datatype='boolean' name='medically_evacuated' ordinal='6' />
                  <column datatype='string' name='reason_tapped_out' ordinal='7' />
                  <column datatype='string' name='profession' ordinal='8' />
                  <column datatype='integer' name='item_number' ordinal='9' />
                  <column datatype='string' name='item_detailed' ordinal='10' />
                  <column datatype='string' name='item' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_armed.csv_83560D95B80C4111829DC9CE794B04EB' table='[Extract].[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]' type='table' />
            </properties>
          </object>
          <object caption='episodes.csv' id='episodes.csv_3A8872BEBC554C0791B797126050C729'>
            <properties context=''>
              <relation connection='textscan.1uik7et1fywlww14wigsp0gkewr6' name='episodes.csv' table='[episodes#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='version' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='integer' name='episode_number_overall' ordinal='2' />
                  <column datatype='integer' name='episode' ordinal='3' />
                  <column datatype='string' name='title' ordinal='4' />
                  <column datatype='date' name='air_date' ordinal='5' />
                  <column datatype='real' name='viewers' ordinal='6' />
                  <column datatype='string' name='quote' ordinal='7' />
                  <column datatype='string' name='author' ordinal='8' />
                  <column datatype='real' name='imdb_rating' ordinal='9' />
                  <column datatype='integer' name='n_ratings' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='episodes.csv_3A8872BEBC554C0791B797126050C729' table='[Extract].[episodes.csv_3A8872BEBC554C0791B797126050C729]' type='table' />
            </properties>
          </object>
          <object caption='seasons.csv' id='seasons.csv_82256FECD04C47CEB68DB2834876E32C'>
            <properties context=''>
              <relation connection='textscan.1uik7et1fywlww14wigsp0gkewr6' name='seasons.csv' table='[seasons#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='version' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='string' name='country' ordinal='3' />
                  <column datatype='integer' name='n_survivors' ordinal='4' />
                  <column datatype='real' name='lat' ordinal='5' />
                  <column datatype='real' name='lon' ordinal='6' />
                  <column datatype='date' name='date_drop_off' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='seasons.csv_82256FECD04C47CEB68DB2834876E32C' table='[Extract].[seasons.csv_82256FECD04C47CEB68DB2834876E32C]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[season (df_armed.csv)]' />
              <expression op='[season]' />
            </expression>
            <first-end-point object-id='df_armed.csv_83560D95B80C4111829DC9CE794B04EB' />
            <second-end-point object-id='episodes.csv_3A8872BEBC554C0791B797126050C729' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[season]' />
              <expression op='[season (seasons.csv)]' />
            </expression>
            <first-end-point object-id='episodes.csv_3A8872BEBC554C0791B797126050C729' />
            <second-end-point object-id='seasons.csv_82256FECD04C47CEB68DB2834876E32C' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' gender pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <_.fcp.ObjectModelTableType.false...column caption='df_armed.csv' datatype='integer' name='[__tableau_internal_object_id__].[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:df_armed.csv_83560D95B80C4111829DC9CE794B04EB:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='df_armed.csv' datatype='table' name='[__tableau_internal_object_id__].[df_armed.csv_83560D95B80C4111829DC9CE794B04EB]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]'>
            <groupfilter function='level-members' level='[none:gender:nk]' />
          </filter>
          <slices>
            <column>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' />
              <wedge-size column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[__tableau_internal_object_id__].[cnt:df_armed.csv_83560D95B80C4111829DC9CE794B04EB:qk]' />
              <size column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[__tableau_internal_object_id__].[cnt:df_armed.csv_83560D95B80C4111829DC9CE794B04EB:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F438681A-CA9E-469E-A056-44FAA26E80D9}' />
    </worksheet>
    <worksheet name=' last x gender box plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column-instance column='[days_lasted]' derivation='Avg' name='[avg:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' value='119' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]</rows>
        <cols>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</cols>
      </table>
      <simple-id uuid='{26E98023-E750-4AB4-963D-23258E749603}' />
    </worksheet>
    <worksheet name='age x last'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Max' name='[max:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#55aa00' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]</rows>
        <cols>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:age:qk]</cols>
      </table>
      <simple-id uuid='{2FBE42A6-2B16-4DC5-939E-D77594C92E5F}' />
    </worksheet>
    <worksheet name='avg last x box plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column-instance column='[days_lasted]' derivation='Avg' name='[avg:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_lasted]' derivation='Min' name='[min:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='145' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[min:days_lasted:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E5BF0C64-D9BE-407A-AD1F-289EB3D2B354}' />
    </worksheet>
    <worksheet name='avg last x season'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column-instance column='[days_lasted]' derivation='Avg' name='[avg:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_lasted]' derivation='Min' name='[min:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[min:days_lasted:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]</rows>
        <cols>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</cols>
      </table>
      <simple-id uuid='{A8C9735B-D464-4494-850E-80AF3EAA0390}' />
    </worksheet>
    <worksheet name='avg last x season x gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column-instance column='[days_lasted]' derivation='Avg' name='[avg:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_lasted]' derivation='Min' name='[min:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]'>
            <groupfilter function='level-members' level='[none:gender:nk]' />
          </filter>
          <slices>
            <column>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[min:days_lasted:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[avg:days_lasted:qk]</rows>
        <cols>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</cols>
      </table>
      <simple-id uuid='{5E8328E1-51CF-46C2-9468-7C0B54C33C32}' />
    </worksheet>
    <worksheet name='last x winner'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Max' name='[max:result:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[profession]' derivation='None' name='[none:profession:nk]' pivot='key' type='nominal' />
            <column caption='Profession' datatype='string' name='[profession]' role='dimension' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' />
              <text column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk] / ([federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk] / [federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{4CB48317-0CA3-4876-B53E-A4FBD7B4144D}' />
    </worksheet>
    <worksheet name='name x last x season'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[season (df_armed.csv)]' derivation='None' name='[none:season (df_armed.csv):ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[season (df_armed.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season (df_armed.csv):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]</rows>
        <cols>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{BE50D211-C227-40F5-B37C-5983349AC6CD}' />
    </worksheet>
    <worksheet name='season x location'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:lon:qk]' field-type='quantitative' max='57944654.003578067' min='-34848941.659176238' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:lat:qk]' field-type='quantitative' max='47671904.965927802' min='-31651654.400920015' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:country:nk]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk]' />
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:lat:qk]</rows>
        <cols>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:lon:qk]</cols>
      </table>
      <simple-id uuid='{48615845-7423-488B-BEF1-E1385E3C1D9C}' />
    </worksheet>
    <worksheet name='winners bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Max' name='[max:age:ok]' pivot='key' type='ordinal' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Max' name='[max:result:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='Max' name='[max:season:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[profession]' derivation='None' name='[none:profession:nk]' pivot='key' type='nominal' />
            <column-instance column='[season (df_armed.csv)]' derivation='None' name='[none:season (df_armed.csv):ok]' pivot='key' type='ordinal' />
            <column caption='Profession' datatype='string' name='[profession]' role='dimension' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column datatype='integer' name='[season (df_armed.csv)]' role='measure' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <computed-sort column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' direction='ASC' using='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:season:qk]' />
          <slices>
            <column>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' value='36' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk]' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season (df_armed.csv):ok]' />
              <lod column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:age:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]</rows>
        <cols>([federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk] / [federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk])</cols>
      </table>
      <simple-id uuid='{9BDB59FC-FAC3-418A-972C-F04ECDE73B48}' />
    </worksheet>
    <worksheet name='winners box'>
      <table>
        <view>
          <datasources>
            <datasource caption='alone_project_' name='federated.0kvy06a159fzew1fgzdjl1ag98fr' />
          </datasources>
          <datasource-dependencies datasource='federated.0kvy06a159fzew1fgzdjl1ag98fr'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column caption='Days Lasted' datatype='integer' name='[days_lasted]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='Max' name='[max:age:ok]' pivot='key' type='ordinal' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:ok]' pivot='key' type='ordinal' />
            <column-instance column='[days_lasted]' derivation='Max' name='[max:days_lasted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result]' derivation='Max' name='[max:result:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[profession]' derivation='None' name='[none:profession:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Profession' datatype='string' name='[profession]' role='dimension' type='nominal' />
            <column caption='Result' datatype='integer' name='[result]' role='measure' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <filter class='categorical' column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' direction='DESC' measure-to-sort-by='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]</column>
            <column>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d8e1d1</color>
                <color>#c0d2b4</color>
                <color>#aac399</color>
                <color>#95b381</color>
                <color>#81a46a</color>
                <color>#6f9556</color>
                <color>#5e8543</color>
                <color>#4e7633</color>
                <color>#406725</color>
                <color>#33581a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:ok] / ([federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:ok] / ([federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk] / ([federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:age:ok] / ([federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk] / [federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{373D5F54-053F-4F1C-AE26-C4D79672D37D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='39' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='32' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='58876' id='6' name='avg last x season x gender' show-title='false' w='57394' x='17600' y='40124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='74000' id='16' name='avg last x box plot' show-title='false' w='16800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='58876' id='20' name=' last x gender box plot' show-title='false' w='24206' x='74994' y='40124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39124' id='21' name='age x last' show-title='false' w='40699' x='17600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39124' id='22' name='avg last x season' show-title='false' w='40901' x='58299' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24000' id='37' name=' gender pie' show-title='false' w='16800' x='800' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7250' id='10' name='avg last x season x gender' pane-specification-id='3' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' type-v2='color' w='14000' x='20500' y='100250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='40' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='74000' id='16' is-fixed='true' name='avg last x box plot' show-title='false' w='16800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39124' id='21' is-fixed='true' name='age x last' show-title='false' w='40699' x='17600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39124' id='22' is-fixed='true' name='avg last x season' show-title='false' w='40901' x='58299' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58876' id='6' is-fixed='true' name='avg last x season x gender' show-title='false' w='57394' x='17600' y='40124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='10' name='avg last x season x gender' pane-specification-id='3' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' type-v2='color' w='14000' x='20500' y='100250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58876' id='20' is-fixed='true' name=' last x gender box plot' show-title='false' w='24206' x='74994' y='40124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24000' id='37' is-fixed='true' name=' gender pie' show-title='false' w='16800' x='800' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C96F1C52-4E20-4256-A02C-16564C9D4673}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='name x last x season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:medically_evacuated:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4292B247-528C-4A4C-837B-D20302F78234}' />
    </window>
    <window class='worksheet' name='age x last'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[:Measure Names]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:medically_evacuated:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:reason_tapped_out:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:result:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB4DD914-886B-453A-9DAD-866B4EBB2219}' />
    </window>
    <window class='worksheet' name=' last x gender box plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[:Measure Names]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:medically_evacuated:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:reason_tapped_out:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:result:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14FE25A7-8461-4864-A963-25412A33E9BA}' />
    </window>
    <window class='worksheet' name='avg last x season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F88BF431-255A-4CA1-B181-C2FAD5730D66}' />
    </window>
    <window class='worksheet' name='avg last x season x gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E4CF738-FD06-4D38-A95D-58539EC2B8AD}' />
    </window>
    <window class='worksheet' name=' gender pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[__tableau_internal_object_id__].[cnt:df_armed.csv_83560D95B80C4111829DC9CE794B04EB:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B57146D7-C49B-47DC-8430-8797DE1D2A5E}' />
    </window>
    <window class='worksheet' name='avg last x box plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FE741C7-CE7F-4EC8-8C61-5C3870736610}' />
    </window>
    <window class='worksheet' name='winners box'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:age:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:item:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:quote:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:reason_tapped_out:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:result:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season_x:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[yr:air_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9453495-CF16-44B7-BF2B-A74D6C07C4CE}' />
    </window>
    <window class='worksheet' name='winners bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season (df_armed.csv):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:item:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:quote:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:reason_tapped_out:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:result:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season (df_armed.csv):ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season_x:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[yr:air_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{799EACEC-143C-4F4D-86DB-17422676C53D}' />
    </window>
    <window class='worksheet' name='last x winner'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:days_lasted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:age:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:result:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:item:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:name:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:profession:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:quote:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:reason_tapped_out:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:result:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season_x:ok]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[yr:air_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{430A643C-5228-44F2-B909-8CFE0AD4890E}' />
    </window>
    <window class='worksheet' name='season x location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[attr:country:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[max:season:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:country:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:lat:qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:location:nk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season (episodes.csv):qk]</field>
            <field>[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97AB50DE-7944-487D-8072-79F50E6D7C5C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' gender pie'>
          <highlight field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[__tableau_internal_object_id__].[cnt:df_armed.csv_83560D95B80C4111829DC9CE794B04EB:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name=' last x gender box plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='age x last'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg last x box plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg last x season'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg last x season x gender'>
          <zoom type='entire-view' />
          <highlight field='[federated.0kvy06a159fzew1fgzdjl1ag98fr].[none:gender:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0912CF93-D7D3-483E-A4BB-8B49DC3F687F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='164' name=' gender pie' width='164'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name=' last x gender box plot' width='192'>
      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
      MwQEjgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      sMl1zf8DKBjera4f3D8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='age x last' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='avg last x box plot' width='192'>
      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
      cv1/yDbWRVzVPuEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='avg last x season' width='192'>
      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
      CJZUNf8fP5FC4Q1+KJUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='avg last x season x gender' width='192'>
      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
      Krf5/yFtjk0AHsYGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='last x winner' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='name x last x season' width='192'>
      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
      g0GHuBVFGXpIedi155VHVdWDQ/3fNc+jSA2DDosPy2O2z/HL9tT3MzDHMfDohtuNMolkhray
      p/3dDz2d3KFUqR2EwHh0TW1VyJUPe7nuPLVqBVVpU623jNc6ddLFel+eVqNGLpcjl8tRb8rG
      PIpMoVKnWinRUTTDQ+rITUrlMs1W25hH12k1m+RyOVRNRxCEgxei3azyYGWdTCbbl6dQLKI0
      K1SaiqF9VKVDvValUK713WtuZ42NzW1K+3keXdM1lVKxSLXWMKQ3apWDe23KncNrmkqlUqZY
      LFEsV9B13VCP3KxTKpdpdefZq4hmo0E2V0DTdUP7tFstatUS1UarL8+w9mnWq9SrRUpVYx69
      3aDSbJNOZ/raoJzb5csvv2QnW+6pR2Vx8T6pVBqt537qpSwP17fI5Yt9sq0sP2BnN0lb3buf
      E1GA7pu22F10qhlufv01iUzJ0Ht4PS4e3vuWr769f9BYjwS9881XrGzuHJT3iMV7d0isL/Ng
      K9137f7tr1la20LX9YG91KOh7tG1/O4an331DQ/XNlF1o9yrD+7T6Cio+z3YQXlqi88/+4R7
      335LutI25Mkkd1nb2GBjO2HIUy3l+Ozzz1lefkhL0Qx5SukNPvnjTe4tL/fdz876A1bXVtnJ
      1w3X2pVdlrbz/bINvVcdtZbizmqae4uLfXmW799HVtSDuDoH19plfv///T23F+9Tl41yLz+4
      z537yyz3yq3KfPbpJ9y9c4dMtXOQpyM3qVRK/PGbJaxW6SCPrnbIV2p89fu/I7/vLt0t2+b6
      Gu12i0K5arwml7i1uMLDtXVUzZhna2OTRGKDrVTWmEepc//BMg/X1mm01b2wMX0td8yoHRnd
      EeL1q7MgGefctWqV2GQcr99vsE0LVicBj51qtdZX3kQsTLWlEfS6e67oVJodRuQGOoc7n+1W
      g1Jpr9cLSHY8zsN9ivD4DBMlBX8whKXHOB6LRdhKpRBi43hc+64QukaxXGV8YhqLzUGo56st
      Y1PT1No64ZExQ7o3EGFibJyL16712eC9wSgub5nJSNCQrmkqC69/QLBUZ2zscH2jtRus75aQ
      FI1kJkfAd+ikJ7ca5DNZmm2d8RknLvu+fIKEb2SGseoGqtDvgx+LhsnlsoiiFZeja95v8+L3
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='season x location' width='192'>
      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
      A4mTYWWmMifEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='winners bar' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='winners box' width='192'>
      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
      8wXSyG7+fxnAPhURLcJ9AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
